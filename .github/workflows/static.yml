# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
<!DOCTYPE html>
<html>
<head>
  <title>Survey</title>
</head>
<body>
  <h2>News Article Survey</h2>

  <p>Read the following article:</p>
  <div id="article"></div>

  <form id="surveyForm">
    <p>How interesting was this article?</p>
    <select name="interest">
      <option value="1">Not at all</option>
      <option value="2">Somewhat</option>
      <option value="3">Neutral</option>
      <option value="4">Interesting</option>
      <option value="5">Very Interesting</option>
    </select>

    <p><input type="submit" value="Submit Survey"></p>
  </form>

  <script>
    // Randomly select and display 1 of N articles
    const articles = [
      "Article 1: Climate change news...",
      "Article 2: Tech update...",
      "Article 3: Health discovery...",
      // Add up to 1000 articles or fetch from server
    ];
    const selected = articles[Math.floor(Math.random() * articles.length)];
    document.getElementById("article").innerText = selected;

    // Optional: submit to server or redirect with completion code
    document.getElementById("surveyForm").addEventListener("submit", function(e) {
      e.preventDefault();
      window.location.href = "https://www.your-completion-page.com/?code=ABC123";
    });
  </script>
</body>
</html>
